aliases:
  - &working_directory ~/circleci_node_test
  - &parallelism 1
#      shell: /bin/bash

executors:
  build-and-test:
    working_directory: *working_directory
    docker:
       # - image: cimg/node:8.17
       - image: cimg/node:12.18
  deploy:
    working_directory: *working_directory
    machine:
      image: ubuntu-1604:202004-01

version: 2.1

jobs:
  qa-build-and-test:
    parallelism: *parallelism
    executor:
      name: build-and-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v2-dependency-cache-{{ .Branch }}-
      - run: npm install
      - save_cache:
          key: v2-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Split test files
          command: |
            circleci tests glob "__tests__/*.js" \
            | circleci tests split > /tmp/jest-tests \
      - run: npm test $(cat /tmp/jest-tests)
  build-and-test:
    parallelism: *parallelism
    executor:
      name: build-and-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependency-cache-{{ checksum "package-lock.json" }}
            - v2-dependency-cache-
      - run: npm install
      - save_cache:
          key: v2-dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: npm test
#      - run:
#          name: Split test files
#          command: |
#            circleci tests glob "__tests__/*.js" \
#            | circleci tests split > /tmp/jest-tests \
#      - run: npm test $(cat /tmp/jest-tests)
  deploy:
    executor:
      name: deploy
    steps:
      - checkout
      - run: sudo apt-get update
      - run: ls -al $HOME

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - qa-build-and-test:
          filters:
            branches:
              only:
                - qa
      - build-and-test:
          filters:
            branches:
              ignore:
                - qa
      - deploy:
          requires:
            - qa-build-and-test
            - build-and-test
          filters:
            branches:
              only:
                - master
                - staging
                - qa

