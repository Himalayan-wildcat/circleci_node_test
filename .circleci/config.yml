aliases:
 - default: &default
#     working_directory: ~/${REPONAME}
#     working_directory: ~/${CIRCLE_PROJECT_REPONAME}
     parameters:
       parallelism:
         type: integer
         default: 1
     environment:
       parallelism: << parameters.parallelism >>
     parallelism: << parameters.parallelism >>

executors:
  build-and-test:
    working_directory: ${CIRCLE_PROJECT_REPONAME}
    docker:
       # - image: cimg/node:8.17
       - image: cimg/node:12.18
  deploy:
    working_directory: ${CIRCLE_PROJECT_REPONAME}
    machine:
      image: ubuntu-1604:202004-01

commands:
  test:
    steps:
      - run: |
            if [[ ${parallelism} == 1 ]]; then
              npm test
            elif [[ ${parallelism} > 1 ]]; then
              circleci tests glob "__tests__/*.js" \
              | circleci tests split > /tmp/jest-tests && \
              npm test $(cat /tmp/jest-tests)
            fi

version: 2.1

jobs:
  qa-build-and-test:
    <<: *default
    executor:
      name: build-and-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - v2-dependency-cache-{{ .Branch }}-
      - run: npm install
      - save_cache:
          key: v2-dependency-cache-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - test
  build-and-test:
    <<: *default
    executor:
      name: build-and-test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v2-dependency-cache-{{ checksum "package-lock.json" }}
            - v2-dependency-cache-
      - run: npm install
      - save_cache:
          key: v2-dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - test
  deploy:
    executor:
      name: deploy
    steps:
      - checkout
      - run: sudo apt-get update
      - run: ls -al $HOME

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - qa-build-and-test:
          filters:
            branches:
              only:
                - qa
      - build-and-test:
          filters:
            branches:
              ignore:
                - qa
      - deploy:
          requires:
            - qa-build-and-test
            - build-and-test
          filters:
            branches:
              only:
                - master
                - staging
                - qa

